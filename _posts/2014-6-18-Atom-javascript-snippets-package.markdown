---
layout: post
title:  "Atom javascript snippets package"
date:   2014-6-18
categories: Tools
---

### [javascript-snippets](https://atom.io/packages/javascript-snippets)

JavaScript & NodeJS Snippets for Atom

### snippets

<section class="section" is="space-pen-section" style="display: block;"><table class="package-snippets-table table native-key-bindings text table-bordered" tabindex="-1"><thead><tr><th>Trigger</th><th>Name</th><th>Body</th></tr></thead><tbody><tr is="space-pen-tr"><td class="snippet-prefix">ac</td><td>appendChild</td><td class="snippet-body">${1:document}.appendChild(${2:elem});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">ae</td><td>addEventListener</td><td class="snippet-body">${1:document}.addEventListener('${2:event}', function(e) {\n\t${0:// body...}\n});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">afn</td><td>anonymous function</td><td class="snippet-body">function(${1:arguments}) {\n\t${0:// body...}\n}</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">al</td><td>alert</td><td class="snippet-body">alert('${1:msg}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">apply</td><td>function apply</td><td class="snippet-body">${1:methodName}.apply(${2:context}, [${3:arguments}])</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">asd</td><td>assert.deepEqual</td><td class="snippet-body">assert.deepEqual(${1:actual}, ${2:expected});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">ase</td><td>assert.equal</td><td class="snippet-body">assert.equal(${1:actual}, ${2:expected});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">asn</td><td>assert.notEqual</td><td class="snippet-body">assert.notEqual(${1:actual}, ${2:expected});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">ca</td><td>classList.add</td><td class="snippet-body">${1:document}.classList.add('${2:class}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">call</td><td>function call</td><td class="snippet-body">${1:methodName}.call(${2:context}, ${3:arguments})</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">cd</td><td>console.dir</td><td class="snippet-body">console.dir(${1:obj});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">cdf</td><td>createDocumentFragment</td><td class="snippet-body">${1:document}.createDocumentFragment();</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">ce</td><td>console.error</td><td class="snippet-body">console.error(${1:obj});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">cel</td><td>createElement</td><td class="snippet-body">${1:document}.createElement(${2:elem});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">ci</td><td>console.info</td><td class="snippet-body">console.info(${1:obj});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">cl</td><td>console.log</td><td class="snippet-body">console.log(${1:obj});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">co</td><td>confirm</td><td class="snippet-body">confirm('${1:msg}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">cr</td><td>classList.remove</td><td class="snippet-body">${1:document}.classList.remove('${2:class}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">ct</td><td>classList.toggle</td><td class="snippet-body">${1:document}.classList.toggle('${2:class}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">cw</td><td>console.warn</td><td class="snippet-body">console.warn(${1:obj});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">de</td><td>debugger</td><td class="snippet-body">debugger;</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">desc</td><td>describe</td><td class="snippet-body">describe('${1:description}', function() {\n\t${0:// body...}\n});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">fe</td><td>forEach</td><td class="snippet-body">${1:myArray}.forEach(function(${2:elem}) {\n\t${0:// body...}\n});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">fi</td><td>for in</td><td class="snippet-body">for (${1:prop} in ${2:obj}) {\n\tif (${2:obj}.hasOwnProperty(${1:prop})) {\n\t\t${0:// body...}\n\t}\n}</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">fn</td><td>function</td><td class="snippet-body">function ${1:methodName} (${2:arguments}) {\n\t${0:// body...}\n}</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">ga</td><td>getAttribute</td><td class="snippet-body">${1:document}.getAttribute('${2:attr}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">gc</td><td>getElementsByClassName</td><td class="snippet-body">${1:document}.getElementsByClassName('${2:class}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">gi</td><td>getElementById</td><td class="snippet-body">${1:document}.getElementById('${2:id}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">gt</td><td>getElementsByTagName</td><td class="snippet-body">${1:document}.getElementsByTagName('${2:tag}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">ih</td><td>innerHTML</td><td class="snippet-body">${1:document}.innerHTML = '${2:elem}';</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">iife</td><td>immediately-invoked function expression</td><td class="snippet-body">(function(${1:window}, ${2:document}) {\n\t${0:// body...}\n})(${1:window}, ${2:document});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">ita</td><td>it asynchronous</td><td class="snippet-body">it('${1:description}', function(done) {\n\t${0:// body...}\n});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">itp</td><td>it pending</td><td class="snippet-body">it('${1:description}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">its</td><td>it synchronous</td><td class="snippet-body">it('${1:description}', function() {\n\t${0:// body...}\n});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">jp</td><td>JSON.parse</td><td class="snippet-body">JSON.parse(${1:obj});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">js</td><td>JSON.stringify</td><td class="snippet-body">JSON.stringify(${1:obj});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">me</td><td>module.exports</td><td class="snippet-body">module.exports = ${1:name};</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">ofn</td><td>function as a property of an object</td><td class="snippet-body">${1:functionName}: function(${2:arguments}) {\n\t${3:// body...}\n}</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">pe</td><td>process.exit</td><td class="snippet-body">process.exit(${1:code});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">pm</td><td>prompt</td><td class="snippet-body">prompt('${1:msg}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">pr</td><td>prototype</td><td class="snippet-body">${1:ClassName}.prototype.${2:methodName} = function(${3:arguments}) {\n\t${0:// body...}\n}</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">qs</td><td>querySelector</td><td class="snippet-body">${1:document}.querySelector('${2:selector}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">qsa</td><td>querySelectorAll</td><td class="snippet-body">${1:document}.querySelectorAll('${2:selector}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">ra</td><td>removeAttribute</td><td class="snippet-body">${1:document}.removeAttribute('${2:attr}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">rc</td><td>removeChild</td><td class="snippet-body">${1:document}.removeChild(${2:elem});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">re</td><td>require</td><td class="snippet-body">require('${1:module}');</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">sa</td><td>setAttribute</td><td class="snippet-body">${1:document}.setAttribute('${2:attr}', ${3:value});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">si</td><td>setInterval</td><td class="snippet-body">setInterval(function() {\n\t${0:// body...}\n}, ${1:delay});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">st</td><td>setTimeout</td><td class="snippet-body">setTimeout(function() {\n\t${0:// body...}\n}, ${1:delay});</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">tc</td><td>textContent</td><td class="snippet-body">${1:document}.textContent = '${2:content}';</td></tr><tr is="space-pen-tr"><td class="snippet-prefix">us</td><td>use strict</td><td class="snippet-body">'use strict';</td></tr></tbody></table></section>
